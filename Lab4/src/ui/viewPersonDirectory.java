/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.EncounterHistory;
import model.Patient;
import model.PatientDirectory;
import model.Person;
import model.PersonDirectory;
/**
 *
 * @author Neha   
 * 
 */

public class viewPersonDirectory extends javax.swing.JPanel {

    /**
     * Creates new form viewPersonDirectory
     */
    PersonDirectory viPersonDirectory;
    PatientDirectory patientDirectory;
    EncounterHistory encounterHistory;
    public viewPersonDirectory(PersonDirectory personDirectory, PatientDirectory patientDirectory, EncounterHistory encounterHistory) {
        initComponents();
        System.out.println("inside right component");
        this.viPersonDirectory = personDirectory;
        this.patientDirectory = patientDirectory;
        this.encounterHistory = encounterHistory;
        populateTable();
        comboCommunity.addItem("MALDEN");
        comboCommunity.addItem("HUNTINGTON");
        comboCommunity.setSelectedItem("");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblLname = new javax.swing.JLabel();
        lblAge = new javax.swing.JLabel();
        lblCommunity = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        lblHouse = new javax.swing.JLabel();
        txtLname = new javax.swing.JTextField();
        txtAge = new javax.swing.JTextField();
        txtCity = new javax.swing.JTextField();
        txtHouse = new javax.swing.JTextField();
        btnAddPerson = new javax.swing.JButton();
        txtFname = new javax.swing.JTextField();
        lblFname = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        viewPersonTable = new javax.swing.JTable();
        btnBookAppointment = new javax.swing.JButton();
        comboCommunity = new javax.swing.JComboBox<>();
        btnEdit = new javax.swing.JButton();
        btnSaveEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jPersonDatabase = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(new java.awt.Color(153, 153, 0));

        lblLname.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblLname.setText("Last Name");

        lblAge.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblAge.setText("Age");

        lblCommunity.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblCommunity.setText("Community");

        lblCity.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblCity.setText("City");

        lblHouse.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblHouse.setText("House Number");

        txtLname.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtLname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtLnameKeyReleased(evt);
            }
        });

        txtAge.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtAge.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAgeKeyReleased(evt);
            }
        });

        txtCity.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtCity.setText(" ");
        txtCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCityActionPerformed(evt);
            }
        });

        txtHouse.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtHouse.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtHouseKeyReleased(evt);
            }
        });

        btnAddPerson.setBackground(new java.awt.Color(255, 255, 255));
        btnAddPerson.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnAddPerson.setText("Add Person");
        btnAddPerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddPersonActionPerformed(evt);
            }
        });

        txtFname.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtFname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFnameKeyReleased(evt);
            }
        });

        lblFname.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblFname.setText("First Name");

        viewPersonTable.setForeground(new java.awt.Color(51, 51, 51));
        viewPersonTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "First Name", "Last Name", "Age", "City", "Community"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(viewPersonTable);

        btnBookAppointment.setBackground(new java.awt.Color(255, 255, 255));
        btnBookAppointment.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnBookAppointment.setText("Mark Patient");
        btnBookAppointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBookAppointmentActionPerformed(evt);
            }
        });

        comboCommunity.setBackground(new java.awt.Color(0, 0, 0));
        comboCommunity.setFont(new java.awt.Font("Didot", 0, 14)); // NOI18N
        comboCommunity.setForeground(new java.awt.Color(102, 102, 102));
        comboCommunity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"Select Community"}));
        comboCommunity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboCommunityActionPerformed(evt);
            }
        });

        btnEdit.setBackground(new java.awt.Color(255, 255, 255));
        btnEdit.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnSaveEdit.setBackground(new java.awt.Color(255, 255, 255));
        btnSaveEdit.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnSaveEdit.setText("Save");
        btnSaveEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveEditActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(255, 255, 255));
        btnDelete.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(51, 51, 51));
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jPersonDatabase.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jPersonDatabase.setText("Person Details");
        jPersonDatabase.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 831, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(136, 136, 136))
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(lblLname, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtLname, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSaveEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(184, 184, 184))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(lblAge, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(500, 500, 500)
                        .addComponent(jPersonDatabase, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(lblCity, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(btnAddPerson))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblHouse)
                                .addGap(18, 18, 18)
                                .addComponent(txtHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(comboCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(lblFname, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtFname, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(457, 457, 457)
                        .addComponent(btnDelete)
                        .addGap(39, 39, 39)
                        .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(btnBookAppointment)))
                .addGap(23, 72, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addComponent(jPersonDatabase, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblFname, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(txtFname, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnEdit)
                            .addComponent(btnDelete)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(btnBookAppointment)))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblLname, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(txtLname, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(btnSaveEdit)))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAge, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(txtHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20)
                .addComponent(btnAddPerson))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBookAppointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBookAppointmentActionPerformed
        // TODO add your handling code here:
        boolean patientYN = false;
        int selectedRowIndex = viewPersonTable.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) viewPersonTable.getModel();
        System.out.println(model.getValueAt(selectedRowIndex, 0));
        Person person = (Person) model.getValueAt(selectedRowIndex , 0);
        System.out.println(person.getFirstname()+ person.getLastname());
        patientYN = ifPatientExist(person.getFirstname(), person.getLastname());

        if(!patientYN){
            Patient patient = new Patient();
            patient.setPatientfirstname(person.getFirstname());
            patient.setPatientlastname(person.getLastname());
            patient.setPatientage(person.getPersonage());
            patient.setPatientcity(person.getPersoncityname());
            patient.setPatientcommunity(person.getPersoncommunityname());
            patient.setPatienthouse(person.getPersonhouseno());
            patient.setPatientid(getUniqueId());
            patientDirectory.addNewPatient(patient);
            System.out.println(patient.getPatientid());
            JOptionPane.showMessageDialog(this, "Appointment Confirmed ");
        }
        else{
            JOptionPane.showMessageDialog(this, "Appointment Confirmed ");
        }

    }//GEN-LAST:event_btnBookAppointmentActionPerformed

    private void btnAddPersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddPersonActionPerformed
        // TODO add your handling code here:
                   if(txtAge.getText().isBlank() || txtAge.getText().isEmpty()
            || txtCity.getText().isBlank() || txtCity.getText().isEmpty()
           || txtFname.getText().isBlank() || txtFname.getText().isEmpty()
            || txtLname.getText().isBlank() || txtLname.getText().isEmpty()
            || txtHouse.getText().isBlank() || txtHouse.getText().isEmpty()
        ){
            JOptionPane.showMessageDialog(this, "Please enter all fields ! ");

        }
                   else{          
        Person person = new Person();
        person.setPersonage(Integer.parseInt(txtAge.getText()));
        person.setPersoncityname(txtCity.getText());
        //person.setCommunityName(txtCommunity.getText());
        person.setPersoncommunityname(comboCommunity.getSelectedItem().toString());
        person.setPersonhouseno(Integer.parseInt(txtHouse.getText()));
        person.setFirstname(txtFname.getText());
        person.setLastname(txtLname.getText());
        this.viPersonDirectory.addNewPerson(person);
        System.out.println(viPersonDirectory.getPersonList().get(0).toString());

        populateTable();
     
                
            txtAge.setText("");
            txtFname.setText("");
            txtLname.setText("");
            txtCity.setText("");
            txtHouse.setText("");
            comboCommunity.setSelectedItem("");
          {
        JOptionPane.showMessageDialog(this, "Person Details Added Successfully");
        }
    }//GEN-LAST:event_btnAddPersonActionPerformed
    }
    private void comboCommunityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboCommunityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboCommunityActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = viewPersonTable.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) viewPersonTable.getModel();
        System.out.println(model.getValueAt(selectedRowIndex, 0));
        Person person = (Person) model.getValueAt(selectedRowIndex , 0);
        txtAge.setText(String.valueOf(person.getPersonage()));
        txtCity.setText(person.getPersoncityname());
        txtFname.setText(person.getFirstname());
        txtLname.setText(person.getLastname());
        txtHouse.setText(String.valueOf(person.getPersonhouseno()));
        comboCommunity.setSelectedItem(person.getPersoncommunityname());

    }//GEN-LAST:event_btnEditActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = viewPersonTable.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) viewPersonTable.getModel();
        System.out.println(model.getValueAt(selectedRowIndex, 0));
        Person person = (Person) model.getValueAt(selectedRowIndex , 0);
        viPersonDirectory.getPersonList().remove(selectedRowIndex);
        populateTable();
        JOptionPane.showMessageDialog(this, "Record Deleted Successfully!");

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void txtFnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFnameKeyReleased
        // TODO add your handling code here:
        String PATTERN = "^[a-zA-Z]{0,50}";
        Pattern pat = Pattern.compile(PATTERN);
        Matcher match = pat.matcher(txtFname.getText());
        if(!match.matches()){
            lblfname.setText("Name is Invalid, Please enter Valid name !");
        }else{
            lblfname.setText("");
        }
    }//GEN-LAST:event_txtFnameKeyReleased

    private void txtLnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLnameKeyReleased
        // TODO add your handling code here:
        String PATTERN = "^[a-zA-Z]{0,50}";
        Pattern pat = Pattern.compile(PATTERN);
        Matcher match = pat.matcher(txtLname.getText());
        if(!match.matches()){
            lbllname.setText("Name is Invalid, Please enter Valid name !");
        }else{
            lbllname.setText("");
        }
    }//GEN-LAST:event_txtLnameKeyReleased

    private void txtAgeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAgeKeyReleased
        // TODO add your handling code here:
        String PATTERN = "^[0-9]{0,3}";
        Pattern pat = Pattern.compile(PATTERN);
        Matcher match = pat.matcher(txtAge.getText());
        if(!match.matches()){
            lblage.setText("Only Numbers and upto 3 digits are allowed");
        }else{
            lblage.setText("");
        }
    }//GEN-LAST:event_txtAgeKeyReleased

    private void txtHouseKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHouseKeyReleased
        // TODO add your handling code here:
        String PATTERN = "^[0-9]{0,3}";
        Pattern pat = Pattern.compile(PATTERN);
        Matcher match = pat.matcher(txtHouse.getText());
        if(!match.matches()){
            lblhouseno.setText("Only Numbers and upto 3 digits are allowed");
        }else{
            lblhouseno.setText("");
        }
    }//GEN-LAST:event_txtHouseKeyReleased

    private void btnSaveEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveEditActionPerformed
        // TODO add your handling code here:
        if(txtAge.getText().isBlank() || txtAge.getText().isEmpty()
            ||txtCity.getText().isBlank() || txtCity.getText().isEmpty()
            ||txtFname.getText().isBlank() || txtFname.getText().isEmpty()
            ||txtLname.getText().isBlank() || txtLname.getText().isEmpty()
            ||txtHouse.getText().isBlank() || txtHouse.getText().isEmpty()

        ){
            JOptionPane.showMessageDialog(this, "Please enter all fields !");

        }else{
            int selectedRowIndex = viewPersonTable.getSelectedRow();
            DefaultTableModel model = (DefaultTableModel) viewPersonTable.getModel();
            System.out.println(model.getValueAt(selectedRowIndex, 0));
            Person person = (Person) model.getValueAt(selectedRowIndex , 0);
            person.setPersonage(Integer.parseInt(txtAge.getText()));
            person.setFirstname(txtFname.getText());
            person.setLastname(txtLname.getText());
            person.setPersoncityname(txtCity.getText());
            person.setPersonhouseno(Integer.parseInt(txtHouse.getText()));
            person.setPersoncommunityname(comboCommunity.getSelectedItem().toString());
            populateTable();
            JOptionPane.showMessageDialog(this, "Record Updated Successfully!");
            txtAge.setText("");
            txtFname.setText("");
            txtLname.setText("");
            txtCity.setText("");
            txtHouse.setText("");
            comboCommunity.setSelectedItem("");
        }
    }//GEN-LAST:event_btnSaveEditActionPerformed

    private void txtCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCityActionPerformed

        

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddPerson;
    private javax.swing.JButton btnBookAppointment;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnSaveEdit;
    private javax.swing.JComboBox<String> comboCommunity;
    private javax.swing.JLabel jPersonDatabase;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCommunity;
    private javax.swing.JLabel lblFname;
    private javax.swing.JLabel lblHouse;
    private javax.swing.JLabel lblLname;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtFname;
    private javax.swing.JTextField txtHouse;
    private javax.swing.JTextField txtLname;
    private javax.swing.JTable viewPersonTable;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) viewPersonTable.getModel();
        model.setRowCount(0);
        for (Person person: viPersonDirectory.getPersonList()){
        Object[] row = new Object[6];
        row[0] = person;
        row[1] = person.getLastname();
        row[2] = person.getPersonage();
        row[3] = person.getPersoncityname();
        row[4] = person.getPersoncommunityname();
        row[5] = person.getPersonhouseno();
        model.addRow(row);
    }
}

    private int getUniqueId() {
        
        int randomPIN = (int)(Math.random()*90000)+10000;
        for(Patient patient : patientDirectory.getPatientList()){
            if(patient.getPatientid()== randomPIN){
            getUniqueId();
            }
        }
        return randomPIN;
    }

    private boolean ifPatientExist(String fName, String lName) {
        boolean exists = false;
        for(Patient patient : patientDirectory.getPatientList()){
        if(patient.getPatientfirstname().equals(fName) && (patient.getPatientlastname()).equals(lName)){
            exists = true;
        }
        }
        return exists;
    }
        
}


