/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;
import javax.swing.table.DefaultTableModel;
import model.EncounterHistory;
import model.Patient;
import model.PatientDirectory;
import model.PersonDirectory;
/**
 *
 * @author Neha
 */

public class viewAbnormalCases extends javax.swing.JPanel {

    /**
     * Creates new form viewAbnormalCases
     */
    PatientDirectory abnormalDirectory;
    EncounterHistory abnormalEncounters;
    PersonDirectory personDirectory;
    public viewAbnormalCases(PatientDirectory abnormalCases, EncounterHistory encounterHistory, PersonDirectory personDirectory) {
        initComponents();
        this.abnormalDirectory = abnormalCases;
        this.abnormalEncounters = encounterHistory;
        this.personDirectory = personDirectory;
        lblTotal.setText(String.valueOf(this.personDirectory.getPersonList().size()));
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblAbnormalCases = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        comboBoxSearch = new javax.swing.JComboBox<>();
        btnSearch = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        lblCases = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jABC = new javax.swing.JLabel();
        jabnormalcases = new javax.swing.JLabel();
        jabnormalcases1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblAbnormalCases.setForeground(new java.awt.Color(255, 0, 51));
        tblAbnormalCases.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "PatientID", "First Name", "Last Name", "Age", "Community", "City", "House"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblAbnormalCases);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 252, 610, 167));

        jLabel1.setFont(new java.awt.Font("Didot", 0, 14)); // NOI18N
        jLabel1.setText("Community:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 168, -1, -1));

        comboBoxSearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "","MALDEN", "HUNTINGTON" }));
        comboBoxSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxSearchActionPerformed(evt);
            }
        });
        add(comboBoxSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(135, 168, 138, -1));

        btnSearch.setBackground(new java.awt.Color(255, 255, 255));
        btnSearch.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        add(btnSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(279, 164, -1, -1));

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setText("TOTAL POPULATION");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 452, 163, -1));

        lblCases.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        add(lblCases, new org.netbeans.lib.awtextra.AbsoluteConstraints(295, 496, -1, 19));

        lblTotal.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        add(lblTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(223, 452, 81, 19));
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(798, 540, -1, -1));

        jABC.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jABC.setText("Abnormal Case Views");
        jABC.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        add(jABC, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 50, 494, 46));
        add(jabnormalcases, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 496, 239, 17));
        add(jabnormalcases1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 546, 239, 17));
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        String searchItem = comboBoxSearch.getSelectedItem().toString();
        PatientDirectory abPatientDirectory = new PatientDirectory();
        for(Patient abPatient : abnormalDirectory.getPatientList()){
        if(abPatient.getPatientcommunity()!= null && abPatient.getPatientcommunity().contains(searchItem)){
            abPatientDirectory.addNewPatient(abPatient);
        }
        populateSearchTable(abPatientDirectory);
        jabnormalcases.setText("CASES IN"+" "+searchItem);
        jabnormalcases1.setText(String.valueOf(abPatientDirectory.getPatientList().size()));
        }
        
    }//GEN-LAST:event_btnSearchActionPerformed

    private void comboBoxSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxSearchActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox<String> comboBoxSearch;
    private javax.swing.JLabel jABC;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jabnormalcases;
    private javax.swing.JLabel jabnormalcases1;
    private javax.swing.JLabel lblCases;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JTable tblAbnormalCases;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
       DefaultTableModel model = (DefaultTableModel) tblAbnormalCases.getModel();
        model.setRowCount(0);
        for (Patient patient: abnormalDirectory.getPatientList()){
        Object[] row = new Object[7];
        row[0] = patient;
        row[1] = patient.getPatientfirstname();
        row[2] = patient.getPatientlastname();
        row[3] = patient.getPatientage();
        row[4] = patient.getPatientcommunity();
        row[5] = patient.getPatientcity();
        row[6] = patient.getPatienthouse();
        model.addRow(row);
    }
}

    private void populateSearchTable(PatientDirectory abPatientDirectory) {
        DefaultTableModel model = (DefaultTableModel) tblAbnormalCases.getModel();
        model.setRowCount(0);
        for (Patient patient: abPatientDirectory.getPatientList()){
        Object[] row = new Object[7];
        row[0] = patient;
        row[1] = patient.getPatientfirstname();
        row[2] = patient.getPatientlastname();
        row[3] = patient.getPatientage();
        row[4] = patient.getPatientcommunity();
        row[5] = patient.getPatientcity();
        row[6] = patient.getPatienthouse();
        model.addRow(row);
        
        }
    }
        
}
